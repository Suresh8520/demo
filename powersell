<powershell>
# Install Git Write-Output "Installing Git..."
$gitInstallDir = "$env:ProgramFiles\Git"
$gitInstallPath = "$gitInstallDir\cmd\git.exe"

New-Item -ItemType Directory -Path C:\Dev\GIT

if (-Not (Test-Path $gitInstallPath)) {
    Invoke-WebRequest -Uri "https://github.com/git-for-windows/git/releases/download/v2.33.0.windows.2/Git-2.33.0.2-64-bit.exe" -OutFile "C:\Dev\GIT\git-install.exe"
    Start-Process -Wait -FilePath "C:\Dev\GIT\git-install.exe" -ArgumentList "/SILENT"
}


# Clone the Git Repository Write-Output "Cloning the Git repository..."
New-Item -ItemType Directory -Path C:\Dev\Tes
$gitRepoUrl = "https://github.com/Suresh8520/my-app.git"  


# Replace with your repository URL
$clonePath = "C:\Dev\Tes"  
# Replace with the desired local path for the clone

git clone $gitRepoUrl $clonePath
</powershell>

===============================================================
# Define the paths you want to add to the PATH environment variable
$gitUsrBinPath = "C:\Program Files\Git\usr\bin"
$gitCmdPath = "C:\Program Files\Git\cmd"

# Get the current value of the PATH environment variable
$currentPath = [System.Environment]::GetEnvironmentVariable("PATH", "Machine")

# Combine the new paths with the existing PATH value (use semicolon as the separator for multiple paths)
$newPath = "$gitUsrBinPath;$gitCmdPath;$currentPath"

# Set the updated PATH environment variable (requires administrator privileges)
Set-Item -Path "Env:PATH" -Value $newPath -Force

# Output the updated PATH variable to verify the changes (optional)
Write-Host "Updated PATH environment variable:"
Write-Host $env:PATH


=============================================================================


Write-Output "Uninstalling Git..."

# Replace this with the correct installation directory if you installed Git in a custom location
$gitInstallDir = "$env:ProgramFiles\Git"

if (Test-Path $gitInstallDir) {
    # Stop all Git-related processes before uninstalling
    Stop-Process -Name git* -Force -ErrorAction SilentlyContinue

    # Uninstall Git using the uninstaller
    $uninstallerPath = Join-Path $gitInstallDir "unins000.exe"
    if (Test-Path $uninstallerPath) {
        Start-Process -Wait -FilePath $uninstallerPath -ArgumentList "/SILENT"
        Write-Output "Git has been uninstalled."
    } else {
        Write-Output "Git uninstaller not found. You may need to uninstall Git manually."
    }
} else {
    Write-Output "Git is not installed on this system."
}

===============================================================================












# Define the URL of the Git for Windows executable
$gitInstallerUrl = "https://github.com/git-for-windows/git/releases/download/v2.33.0.windows.2/Git-2.33.0.2-64-bit.exe"

# Define the local path for the installer
$gitInstallerPath = "$env:USERPROFILE\Downloads\GitInstaller.exe"

# Download the Git for Windows installer
Invoke-WebRequest -Uri $gitInstallerUrl -OutFile $gitInstallerPath

# Install Git silently (add any other desired flags if needed)
Start-Process -FilePath $gitInstallerPath -ArgumentList "/SILENT"

# Wait for the installation to complete (adjust the sleep time if needed)
Start-Sleep -Seconds 15

# Remove the installer file
Remove-Item -Path $gitInstallerPath -Force

# Replace REPO_URL with the URL of the Git repository to clone
$repositoryUrl = "https://github.com/Suresh8520/my-app.git"

# Replace DESTINATION_FOLDER with the local path where you want to clone the repository
$destinationFolder = "C:\Users\Public"

# Clone the Git repository to the specified folder
git clone $repositoryUrl $destinationFolder

